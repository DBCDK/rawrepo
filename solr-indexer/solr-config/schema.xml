<?xml version="1.0" encoding="UTF-8" ?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
  -->

<!--
   DBC Opensearch solr (sunrise) schema.xml file. This file provides the
   schema.xml file for The solr search and indexing framework as used by
   the opensearch project. All fields and fieldtypes relevant to the
   opensearch project can be found at the end of the file.
  -->

<!--
   This is the Solr schema file. This file should be named "schema.xml" and
   should be in the conf directory under the solr home
   (i.e. ./solr/conf/schema.xml by default)
   or located where the classloader for the Solr webapp can find it.

   This example schema is the recommended starting point for users.
   It should be kept correct and concise, usable out-of-the-box.

   For more information, on how to customize this file, please see
   http://wiki.apache.org/solr/SchemaXml
  -->

<schema name="RawRecordRepositoryIndex" version="1.5">

  <types>
    <!-- field type definitions. The "name" attribute is
         just a label to be used by field definitions.  The "class"
         attribute and any other attributes determine the real
         behavior of the fieldType.
         Class names starting with "solr" refer to java classes in the
         org.apache.solr.analysis package.
      -->

    <!-- The StrField type is not analyzed, but indexed/stored verbatim.
         - StrField and TextField support an optional compressThreshold which
         limits compression (if enabled in the derived fields) to values which
         exceed a certain size (in characters).
      -->

    <fieldType name="string" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>


    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>

    <!-- The optional sortMissingLast and sortMissingFirst attributes are
         currently supported on types that are sorted internally as strings.
         - If sortMissingLast="true", then a sort on this field will cause documents
         without the field to come after documents with the field,
         regardless of the requested sort order (asc or desc).
         - If sortMissingFirst="true", then a sort on this field will cause documents
         without the field to come before documents with the field,
         regardless of the requested sort order.
         - If sortMissingLast="false" and sortMissingFirst="false" (the default),
         then default lucene sorting will be used which places docs without the
         field first in an ascending sort and last in a descending sort.
      -->


    <!-- numeric field types  -->
    <fieldType name="int" class="solr.TrieIntField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="long" class="solr.TrieLongField" omitNorms="true"/>

    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
         is a more restricted form of the canonical representation of dateTime
         http://www.w3.org/TR/xmlschema-2/#dateTime
         The trailing "Z" designates UTC time and is mandatory.
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
         All other components are mandatory.

         Expressions can also be used to denote calculations that should be
         performed relative to "NOW" to determine the value, ie...

         NOW/HOUR
         ... Round to the start of the current hour
         NOW-1DAY
         ... Exactly 1 day prior to now
         NOW/DAY+6MONTHS+3DAYS
         ... 6 months and 3 days in the future from the start of
         the current day

         Consult the TrieDateField javadocs for more information.
      -->
    <fieldType name="date" class="solr.TrieDateField" sortMissingLast="true" omitNorms="true"/>

    <!-- solr.TextField allows the specification of custom text analyzers
         specified as a tokenizer and a list of token filters. Different
         analyzers may be specified for indexing and querying.

         The optional positionIncrementGap puts space between multiple fields of
         this type on the same document, with the purpose of preventing false phrase
         matching across fields.

         For more info on customizing your analyzer chain, please see
         http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
      -->

    <!-- One can also specify an existing Analyzer class that has a
         default constructor via the class attribute on the analyzer element
         <fieldType name="text_greek" class="solr.TextField">
           <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
         </fieldType>
         -->

    <!-- This is an example of using the KeywordTokenizer along
         With various TokenFilterFactories to produce a sortable field
         that does not include some properties of the source text
      -->
    <fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <!-- KeywordTokenizer does no actual tokenizing, so the entire
             input string is preserved as a single token
          -->
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <!-- The LowerCase TokenFilter does what you expect, which can be
             when you want your sorting to be case insensitive
          -->
        <filter class="solr.LowerCaseFilterFactory" />
        <!-- The TrimFilter removes any leading or trailing whitespace -->
        <filter class="solr.TrimFilterFactory" />
        <!-- The PatternReplaceFilter gives you the flexibility to use
             Java Regular expression to replace any sequence of characters
             matching a pattern with an arbitrary replacement string,
             which may include back refrences to portions of the orriginal
             string matched by the pattern.

             See the Java Regular Expression documentation for more
             infomation on pattern and replacement string syntax.

             http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/package-summary.html
          -->
        <filter class="solr.PatternReplaceFilterFactory"
                pattern="([^a-z])" replacement="" replace="all"
                />
      </analyzer>
    </fieldType>

    <fieldtype name="ignored" stored="false" indexed="false" class="solr.StrField" />

  <!-- DBC Field types -->
  <!-- These types are made with the Opensearch project in mind, and are
       only tested in that context -->

  <fieldType name="id" class="solr.StrField" sortMissingLast="true" omitNorms="true">
    <!-- Fieldtype for the id field. This is the uniquekeyfield for each
         solr document, which means it is not allowed to be analyzed or
         normalized in anyway, which is why we use the solr.StrField
         class as analyzer for this field type -->,
  </fieldType>

  <fieldtype name="dbc-default" class="solr.TextField" multiValued="true" stored="true">
    <!-- Default field type. This Type tokenizes the string with a
         whitespace tokenizer.  Afterwards the terms are normalised as
         specified in the phraseMap.txt mapping file.-->
	<analyzer type="query">
			<charFilter class="solr.MappingCharFilterFactory" mapping="defaultMap.txt"/>
			<tokenizer class="solr.WhitespaceTokenizerFactory" />
			<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="1" catenateAll="0" splitOnCaseChange="0" stemEnglishPossessive="0"/>
			<filter class="solr.LowerCaseFilterFactory" />
		</analyzer>
		<analyzer type="index">
			<charFilter class="solr.MappingCharFilterFactory" mapping="defaultMap.txt"/>
			<tokenizer class="solr.WhitespaceTokenizerFactory" />
			<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="0" stemEnglishPossessive="0"/>
			<filter class="solr.LowerCaseFilterFactory" />
		</analyzer>
	</fieldtype>

  <fieldtype name="dbc-sort" class="solr.TextField" multiValued="false" sortMissingLast="true" stored="true">
    <!-- Sort field type. This type tokenizes the string using the
         keywordtokenizer and lowercases the resulting
         terms. Afterwards the terms are normalised as specified in
         the sortMap.txt mapping file. -->
    <analyzer>
      <charFilter class="solr.MappingCharFilterFactory" mapping="sortMap.txt"/>
      <tokenizer class="solr.KeywordTokenizerFactory"/>
      <filter class="solr.PatternReplaceFilterFactory" pattern="(.*) \u00A4(.*)" replacement="$2, $1" replace="first"/>
      <filter class="solr.LowerCaseFilterFactory" />
    </analyzer>
  </fieldtype>

   <fieldType name="dbc-string" class="solr.TextField" sortMissingLast="true" omitNorms="true" multiValued="true">
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

   <fieldType name="dbc-isbn" class="solr.TextField" sortMissingLast="true" omitNorms="true" multiValued="true">
      <analyzer>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[^0-9xX]" replacement=""/>
        <tokenizer class="solr.PatternTokenizerFactory" pattern="^(.*)$" group="1"/>
      </analyzer>
    </fieldType>

   <fieldType name="dbc-faust" class="solr.TextField" sortMissingLast="true" omitNorms="true" multiValued="true">
      <analyzer>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[^0-9]" replacement=""/>
        <tokenizer class="solr.PatternTokenizerFactory" pattern="^(.*)$" group="1"/>
      </analyzer>
    </fieldType>

      <fieldType name="dbc-doc-id" class="solr.TextField" sortMissingLast="true" omitNorms="true" multiValued="true">
      <analyzer>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\s" replacement=""/>
        <tokenizer class="solr.PatternTokenizerFactory" pattern="^(.*)$" group="1"/>
      </analyzer>
    </fieldType>

      <fieldType name="dbc-analyzed-id" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\s" replacement=""/>
        <tokenizer class="solr.PatternTokenizerFactory" pattern="^(.*)$" group="1"/>
      </analyzer>
    </fieldType>

    <fieldType name="dbc-exact" class="solr.TextField" positionIncrementGap="100" multiValued="true">
        <analyzer>
            <charFilter class="solr.MappingCharFilterFactory" mapping="defaultMap.txt"/>
            <!-- &#66639; DESERET SMALL LETTER EW -->
            <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="&#66639;" replacement=""/>
            <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="^(.*)$" replacement="&#66639; $1 &#66639;"/>
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
    </fieldType>

   <fieldType name="dbc-match" class="solr.TextField" sortMissingLast="true" omitNorms="true" multiValued="true">
      <analyzer>
        <charFilter class="solr.MappingCharFilterFactory" mapping="matchMap.txt"/>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[^0-9a-zA-ZæÆøØåÅ]" replacement=""/>
        <tokenizer class="solr.PatternTokenizerFactory" pattern="^(.*)$" group="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
  </types>

    <!-- DBC Fields. All the fields allowed in the index must be specified
         here to be present and searchable in the index -->

  <fields>
    <!-- Required when updateLog is enabled-->
    <field name="_version_" type="long" indexed="true" stored ="true"/>
  	<!-- -->
    <field name="id" type="id" indexed="true" stored="true" required="true" />
    <field name="marc.001a001b" type="dbc-analyzed-id" indexed="true" stored="true" required="false" />
    <field name="marc.001a" type="dbc-faust" indexed="true" stored="true" required="false" />
    <field name="marc.001b" type="int" indexed="true" stored="true" required="false" />
    <field name="marc.001c" type="date" indexed="true" stored="true" required="false" />
    <field name="marc.001d" type="date" indexed="true" stored="true" required="false" />

    <field name="marc.002a" type="dbc-faust" indexed="true" stored="true" required="false" multiValued="true" />
    <field name="marc.002b" type="dbc-analyzed-id" indexed="true" stored="true" required="false" multiValued="true" />
    <field name="marc.002c" type="dbc-doc-id" indexed="true" stored="true" required="false" multiValued="true" />

    <field name="marc.004a" type="dbc-default" indexed="true" stored="true" required="false" multiValued="false"/>
    <copyField source="marc.004a" dest="match.004a"/>
    <field name="match.004a" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.008a" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.008a" dest="match.008a"/>
    <field name="match.008a" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.009a" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.009a" dest="match.009a"/>
    <field name="match.009a" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.009g" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.009g" dest="match.009g"/>
    <field name="match.009g" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.014a" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.014a" dest="match.014a"/>
    <field name="match.014a" type="dbc-match" indexed="true" stored="true" required="false" />

      <!-- Standalone ... -->
    <field name="marc.021a" type="dbc-isbn" indexed="true" stored="true" required="false" />
    <copyField source="marc.021a" dest="match.021a"/>
    <field name="match.021a" type="dbc-match" indexed="true" stored="true" required="false" />
    <field name="marc.021e" type="dbc-isbn" indexed="true" stored="true" required="false" />
    <copyField source="marc.021e" dest="match.021e"/>
    <field name="match.021e" type="dbc-match" indexed="true" stored="true" required="false" />
    <!-- ... and combine -->
    <copyField source="marc.021a" dest="marc.021ae"/>
    <copyField source="marc.021e" dest="marc.021ae"/>
    <field name="marc.021ae" type="dbc-isbn" indexed="true" stored="true" required="false" />

      <field name="marc.022a" type="dbc-isbn" indexed="true" stored="true" required="false"/>
    <copyField source="marc.022a" dest="match.022a"/>
    <field name="match.022a" type="dbc-match" indexed="true" stored="true" required="false" />

      <!-- Combine -->
    <field name="marc.023a" type="dbc-default" indexed="false" stored="false" required="false" />
    <field name="marc.023b" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.023a" dest="match.023ab"/>
    <copyField source="marc.023b" dest="match.023ab"/>
    <field name="match.023ab" type="dbc-match" indexed="true" stored="true" required="false" />

      <field name="marc.024a" type="dbc-default" indexed="false" stored="false" required="false"/>
    <copyField source="marc.024a" dest="match.024a"/>
    <field name="match.024a" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.028a" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.028a" dest="match.028a"/>
    <field name="match.028a" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.100a" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.100a" dest="match.100a"/>
    <field name="match.100a" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.110a" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.110a" dest="match.110a"/>
    <field name="match.110a" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.245a" type="dbc-default" indexed="true" stored="true" required="false" />
    <copyField source="marc.245a" dest="match.245a"/>
    <field name="match.245a" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.245g" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.245g" dest="match.245g"/>
    <field name="match.245g" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.245n" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.245n" dest="match.245n"/>
    <field name="match.245n" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.245ø" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.245ø" dest="match.245ø"/>
    <field name="match.245ø" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.250a" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.250a" dest="match.250a"/>
    <field name="match.250a" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.260b" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.260b" dest="match.260b"/>
    <field name="match.260b" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.300e" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.300e" dest="match.300e"/>
    <field name="match.300e" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.538g" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.538g" dest="match.538g"/>
    <field name="match.538g" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.652m" type="dbc-default" indexed="false" stored="false" required="false" />
    <copyField source="marc.652m" dest="match.652m"/>
    <field name="match.652m" type="dbc-match" indexed="true" stored="true" required="false" />

    <field name="marc.y08a" type="dbc-default" indexed="true" stored="true" required="false" />

    <field name="marc.s11a" type="dbc-default" indexed="true" stored="true" required="false" />

    <field name="rec.collectionIdentifier" type="id" indexed="true" stored="true" required="false" />
    <field name="rec.created" type="date" indexed="true" stored="true" required="false" />
    <field name="rec.modified" type="date" indexed="true" stored="true" required="false" />
    <field name="rec.bibliographicRecordId" type="dbc-doc-id" indexed="true" stored="true" required="false" />
    <field name="rec.agencyId" type="int" indexed="true" stored="true" required="false" />
    <field name="rec.trackingId" type="id" indexed="true" stored="true" required="false" />
    <field name="rec.indexedDate" type="date" indexed="true" stored="true" multiValued="false"/>

    <field name="default" type="dbc-default" indexed="true" stored="true" required="false"/>

    <copyField source="id" dest="default"/>
    <copyField source="marc.001a001b" dest="default"/>
    <copyField source="marc.001a" dest="default"/>
    <copyField source="marc.001b" dest="default"/>
    <copyField source="marc.001c" dest="default"/>
    <copyField source="marc.001d" dest="default"/>
    <copyField source="marc.002a" dest="default"/>
    <copyField source="marc.021a" dest="default"/>
    <copyField source="marc.021e" dest="default"/>
    <copyField source="marc.022a" dest="default"/>
    <copyField source="marc.245a" dest="default"/>
    <copyField source="marc.245ø" dest="default"/>
    <copyField source="marc.y08a" dest="default"/>
    <copyField source="rec.created" dest="default"/>
    <copyField source="rec.modified" dest="default"/>
    <copyField source="rec.bibliographicRecordId" dest="default"/>
    <copyField source="rec.agencyId" dest="default"/>
    <copyField source="rec.trackingId" dest="default"/>

  </fields>

  <!-- Field to use to determine and enforce document uniqueness.
       Unless this field is marked with required="false", it will be a required field
    -->
  <uniqueKey>id</uniqueKey>

  <!-- field for the QueryParser to use when an explicit fieldname is absent -->
  <defaultSearchField>term.default</defaultSearchField>

  <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
  <solrQueryParser defaultOperator="AND"/>

</schema>
